// @generated by protobuf-ts 2.9.3 with parameter long_type_string
// @generated from protobuf file "locator.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Locator } from "./locator";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LocateMessage } from "./locator";
import type { LocateRequest } from "./locator";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Locator
 */
export interface ILocatorClient {
    /**
     * @generated from protobuf rpc: Locate(LocateRequest) returns (LocateMessage);
     */
    locate(input: LocateRequest, options?: RpcOptions): UnaryCall<LocateRequest, LocateMessage>;
}
/**
 * @generated from protobuf service Locator
 */
export class LocatorClient implements ILocatorClient, ServiceInfo {
    typeName = Locator.typeName;
    methods = Locator.methods;
    options = Locator.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Locate(LocateRequest) returns (LocateMessage);
     */
    locate(input: LocateRequest, options?: RpcOptions): UnaryCall<LocateRequest, LocateMessage> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LocateRequest, LocateMessage>("unary", this._transport, method, opt, input);
    }
}
