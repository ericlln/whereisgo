syntax = "proto3";
option go_package = "github.com/ericlln/locator";

// Locator
message LocateRequest {
  double l = 1;
  double b = 2;
  double cLat = 3;
  double cLng = 4;
}

message Locate {
  int32     trip_id = 1;
  double    lat = 2;
  double    lng = 3;
  int32     course = 4;
}

message LocateMessage {
  repeated Locate   locates = 1;
  int64             timestamp = 2;
}

service Locator {
  rpc Locate(LocateRequest) returns (LocateMessage);
}


// Trip Details
message Stops {
  string FirstStop = 1;
  string PrevStop = 2;
  string LastStop = 3;
}

message TripDetailsMessage {
  string  RouteNumber = 1;
  string   StartTime = 2;
  string   EndTime = 3;
  int32   BusType = 4;
  Stops   Stops = 5;
  int32   DelayInSeconds = 6;
  int64   Timestamp = 7;
}

message TripDetailsRequest {
  int32 TripId = 1;
}

service TripDetails {
  rpc TripDetails(TripDetailsRequest) returns (TripDetailsMessage);
}


// Health Check
message HealthCheckMessage {
  int32 stopCount = 1;
  int32 trips = 2;
  float averageDelay = 3;
}

service HealthCheck {
  rpc HealthCheck(Empty) returns (HealthCheckMessage);
}

// Empty
message Empty{}